from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from vk_bot.bot_function import marks_person, redis_get_prev_person, redis_person_is_current, redis_person_is_last
from database import session_bd, PATH
from database.models import Users, LikedList, BlackList
from sqlalchemy import join


def main_menu(id_vk) -> VkKeyboard:
    """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button('–ù–∞–π—Ç–∏ –ø–æ–ª–æ–≤–∏–Ω–∫—É üíô',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "search_people"})
    keyboard.add_line()
    keyboard.add_button('–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π',
                        color=VkKeyboardColor.PRIMARY,
                        payload={"type": "filters"})
    keyboard.add_line()
    keyboard.add_button('Like list',
                        color=VkKeyboardColor.POSITIVE,
                        payload={"type": "Like list"})
    keyboard.add_button('Block list',
                        color=VkKeyboardColor.NEGATIVE,
                        payload={"type": "Block list"})
    keyboard.add_line()
    keyboard.add_button('–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "browsing_history"})
    keyboard.add_callback_button('–í–∞—à–∏ –æ—Ç–º–µ—Ç–∫–∏',
                                 color=VkKeyboardColor.SECONDARY,
                                 payload={"type": "show_snackbar",
                                          "text": f"–í–∞—Å –æ—Ç–º–µ—Ç–∏–ª–æ {marks_person(id_vk)}, –≤—ã –Ω–∏–∫–æ–º—É –Ω–µ –Ω—É–∂–Ω—ã"})

    return keyboard


def filters_menu() -> VkKeyboard:
    """–ú–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞"""
    keyboard = VkKeyboard(one_time=False, inline=True)
    keyboard.add_callback_button('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:',
                                 color=VkKeyboardColor.PRIMARY,
                                 payload={"type": "show_snackbar", "text": "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤"})
    keyboard.add_line()
    keyboard.add_callback_button('–í–æ–∑—Ä–∞—Å—Ç:',
                                 color=VkKeyboardColor.POSITIVE,
                                 payload={"type": "show_snackbar", "text": "–í—ã–±–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞"})
    keyboard.add_button('14-18',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_14-18"})
    keyboard.add_button('19-25',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_19-25"})
    keyboard.add_button('26-35',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_26-35"})
    keyboard.add_button('>35',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_>35"})
    keyboard.add_line()
    keyboard.add_callback_button('–ü–æ–ª:',
                                 color=VkKeyboardColor.POSITIVE,
                                 payload={"type": "show_snackbar", "text": "–í—ã–±–æ—Ä –ø–æ–ª–∞"})
    keyboard.add_button('–º—É–∂—Å–∫–æ–π',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_sex-male"})
    keyboard.add_button('–∂–µ–Ω—Å–∫–∏–π',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_sex-female"})
    return keyboard


def search_inline(url_profile: str, id_vk: int, user_list_id: int, prev_none: bool = False) -> VkKeyboard:
    """–°–ø–∏—Å–æ–∫ –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö/–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    keyboard = VkKeyboard(one_time=False, inline=True)
    info_user = redis_person_is_last(id_vk)    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ prev_people
    # print(info_user)
    if prev_none or redis_person_is_last(id_vk):
        keyboard.add_callback_button('–ü—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç',
                                     color=VkKeyboardColor.PRIMARY,
                                     payload={"type": "show_snackbar",
                                              "text": "–ù–µ–ª—å–∑—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–ø–∏—Å—å"})
    else:
        keyboard.add_callback_button('‚¨Ö–ü—Ä–µ–¥—ã–¥—É—â–∏–π —á–µ–ª–æ–≤–µ–∫',
                                     color=VkKeyboardColor.PRIMARY,
                                     payload={"type": "prev_people"})
    keyboard.add_callback_button('‚û°Ô∏è–°–ª–µ–¥—É—é—â–∏–π —á–µ–ª–æ–≤–µ–∫',
                                 color=VkKeyboardColor.POSITIVE,
                                 payload={"type": "next_people"})
    keyboard.add_line()

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ/–ß–° –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–Ω–æ–ø–∫–∏ ---
    session = session_bd(PATH)
    with (session() as sess):
        check_lists_result = (sess.query(Users.id_vk, LikedList.id_like_user, BlackList.id_ignore_user).
                              join(BlackList, Users.id_vk == BlackList.id_user).
                              outerjoin(LikedList, Users.id_vk == LikedList.id_user).
                              filter(Users.id_vk == id_vk)).all()
        button_liked_list = True
        button_black_list = True
        if check_lists_result:
            button_liked_list = not any(user_list_id == id_[1] for id_ in check_lists_result)
            button_black_list = not any(user_list_id == id_[2] for id_ in check_lists_result)

    if button_black_list:
        keyboard.add_callback_button('‚ùå–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å',
                                     color=VkKeyboardColor.NEGATIVE,
                                     payload={"type": "show_snackbar",
                                              "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫"})
    else:
        keyboard.add_callback_button('‚ùå–£–±—Ä–∞—Ç—å –∏–∑ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö',
                                     color=VkKeyboardColor.NEGATIVE,
                                     payload={"type": "show_snackbar",
                                              "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞"})

    if button_liked_list:
        keyboard.add_callback_button('üíõ–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫',
                                     color=VkKeyboardColor.POSITIVE,
                                     payload={"type": "show_snackbar",
                                              "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"})
    else:
        keyboard.add_callback_button('üíõ–£–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞',
                                     color=VkKeyboardColor.POSITIVE,
                                     payload={"type": "show_snackbar",
                                              "text": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"})
    keyboard.add_line()
    keyboard.add_callback_button('–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å',
                                 color=VkKeyboardColor.SECONDARY,
                                 payload={"type": "open_link",
                                          'link': url_profile})
    return keyboard


def search_menu():
    keyboard = VkKeyboard(one_time=False, inline=True)
    keyboard.add_callback_button('–°—Å—ã–ª–∫–∞ 1',
                                 color=VkKeyboardColor.SECONDARY,
                                 payload={"type": "open_link",
                                          'link': 'https://vk-api.readthedocs.io/en/latest/bot_longpoll.html'})
    keyboard.add_line()
    keyboard.add_callback_button('–°—Å—ã–ª–∫–∞ 2',
                                 color=VkKeyboardColor.SECONDARY,
                                 payload={"type": "open_link",
                                          'link': 'https://vk-api.readthedocs.io/en/latest/bot_longpoll.html'})
    return keyboard

# def inline_main_menu() -> VkKeyboard:
#     """Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
#     keyboard = VkKeyboard(one_time=False, inline=True)
#     keyboard.add_callback_button('–ö–Ω–æ–ø–∫–∞1', color=VkKeyboardColor.PRIMARY, payload={"type": "my_own_100500_type_edit"})
#     keyboard.add_callback_button('–ö–Ω–æ–ø–∫–∞2', color=VkKeyboardColor.NEGATIVE, payload={"type": "open_link", "link": "https://vk.com/dev/bots_docs_5"})
#     keyboard.add_callback_button('–ö–Ω–æ–ø–∫–∞3', color=VkKeyboardColor.PRIMARY, payload={"type": "open_link", "link": "https://vk.com/dev/bots_docs_5"})
#     keyboard.add_callback_button('–î–æ–±–∞–≤–∏—Ç—å –∫—Ä–∞—Å–Ω–æ–≥–æ ', color=VkKeyboardColor.PRIMARY,
#                                    payload={"type": "my_own_100500_type_edit"})
#
#     return keyboard
