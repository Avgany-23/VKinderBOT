from database.requests_redis import redis_person_is_last
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from database.models import Users, LikedList, BlackList
from vk_bot.bot_function import marks_person
from database import session_bd, PATH


def main_menu(id_vk) -> VkKeyboard:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    keyboard = VkKeyboard(one_time=False)
    keyboard.add_button(label='–ù–∞–π—Ç–∏ –ø–æ–ª–æ–≤–∏–Ω–∫—É üíô',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "search_people"})
    keyboard.add_line()
    keyboard.add_button(label='–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π',
                        color=VkKeyboardColor.PRIMARY,
                        payload={"type": "filters"})
    keyboard.add_line()
    keyboard.add_button(label='Like list',
                        color=VkKeyboardColor.POSITIVE,
                        payload={"type": "Like list"})
    keyboard.add_button(label='Block list',
                        color=VkKeyboardColor.NEGATIVE,
                        payload={"type": "Block list"})
    keyboard.add_line()
    keyboard.add_button(label='–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "browsing_history"})
    keyboard.add_callback_button(label='–í–∞—à–∏ –æ—Ç–º–µ—Ç–∫–∏',
                                 color=VkKeyboardColor.SECONDARY,
                                 payload={"type": "show_snackbar",
                                          "text": f"–í–∞—Å –æ—Ç–º–µ—Ç–∏–ª–æ {marks_person(id_vk)}, –≤—ã –Ω–∏–∫–æ–º—É –Ω–µ –Ω—É–∂–Ω—ã"})

    return keyboard


def filters_menu() -> VkKeyboard:
    """–ú–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–æ–∏—Å–∫–∞"""
    keyboard = VkKeyboard(one_time=False, inline=True)
    keyboard.add_callback_button(label='–í–æ–∑—Ä–∞—Å—Ç:',
                                 color=VkKeyboardColor.POSITIVE,
                                 payload={"type": "show_snackbar", "text": "–í—ã–±–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞"})
    keyboard.add_button(label='14-18',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_14-18"})
    keyboard.add_button(label='19-25',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_19-25"})
    keyboard.add_button(label='26-35',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_26-35"})
    keyboard.add_button(label='>35',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_>35"})
    keyboard.add_line()
    keyboard.add_callback_button(label='–ü–æ–ª:',
                                 color=VkKeyboardColor.POSITIVE,
                                 payload={"type": "show_snackbar", "text": "–í—ã–±–æ—Ä –ø–æ–ª–∞"})
    keyboard.add_button(label='–º—É–∂—Å–∫–æ–π',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_sex-male"})
    keyboard.add_button(label='–∂–µ–Ω—Å–∫–∏–π',
                        color=VkKeyboardColor.SECONDARY,
                        payload={"type": "filter_sex-female"})
    keyboard.add_line()
    keyboard.add_button(label='–°—Ç–∞—Ç—É—Å: –Ω–∞–∂–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                        color=VkKeyboardColor.PRIMARY,
                        payload={"type": "info_status"})
    keyboard.add_line()
    keyboard.add_button(label='–ì–æ—Ä–æ–¥: –Ω–∞–∂–∞—Ç—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                        color=VkKeyboardColor.PRIMARY,
                        payload={"type": "info_city"})
    return keyboard


def search_inline(url_profile: str, id_vk: int, user_list_id: int, prev_none: bool = False) -> VkKeyboard:
    """–°–ø–∏—Å–æ–∫ –æ—Ç–º–µ—á–µ–Ω–Ω—ã—Ö/–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    keyboard = VkKeyboard(one_time=False, inline=True)

    if prev_none or redis_person_is_last(id_vk):
        keyboard.add_callback_button(label='–ü—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–ø–∏—Å–∏ –Ω–µ—Ç',
                                     color=VkKeyboardColor.PRIMARY,
                                     payload={"type": "show_snackbar",
                                              "text": "–ù–µ–ª—å–∑—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é –∑–∞–ø–∏—Å—å"})
    else:
        keyboard.add_callback_button(label='‚¨Ö–ü—Ä–µ–¥—ã–¥—É—â–∏–π —á–µ–ª–æ–≤–µ–∫',
                                     color=VkKeyboardColor.PRIMARY,
                                     payload={"type": "prev_people"})
    keyboard.add_callback_button(label='‚û°Ô∏è–°–ª–µ–¥—É—é—â–∏–π —á–µ–ª–æ–≤–µ–∫',
                                 color=VkKeyboardColor.POSITIVE,
                                 payload={"type": "next_people"})
    keyboard.add_line()

    # --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —á–µ–ª–æ–≤–µ–∫–∞ –≤ —Å–ø–∏—Å–∫–µ –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ/–ß–° –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –∫–Ω–æ–ø–∫–∏ ---
    session = session_bd(PATH)
    with session() as sess:
        from sqlalchemy import and_
        check_lists_result = (sess.query(Users.id_vk,
                                         LikedList.id_like_user,
                                         BlackList.id_ignore_user,
                                         LikedList.name_user,
                                         BlackList.name_user).
                              outerjoin(LikedList, and_(Users.id_vk == LikedList.id_user,
                                                        LikedList.id_like_user == user_list_id)).
                              outerjoin(BlackList, and_(Users.id_vk == BlackList.id_user,
                                                        BlackList.id_ignore_user == user_list_id)).
                              filter(Users.id_vk == id_vk)).all()[0]

        # –ï—Å–ª–∏ True, –∑–Ω–∞—á–∏—Ç –∫–Ω–æ–ø–∫–∞ "–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å", False - "–£–±—Ä–∞—Ç—å –∏–∑ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö"
        button_liked_list = check_lists_result[1] is None
        # –ï—Å–ª–∏ True, –∑–Ω–∞—á–∏—Ç –∫–Ω–æ–ø–∫–∞ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫", False - "–£–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞"
        button_black_list = check_lists_result[2] is None

    if button_black_list:
        keyboard.add_callback_button(label='‚ùå–ë–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å',
                                     color=VkKeyboardColor.NEGATIVE,
                                     payload={"type": "show_snackbar",
                                              "text": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫"})
    else:
        keyboard.add_callback_button(label='‚ùå–£–±—Ä–∞—Ç—å –∏–∑ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö',
                                     color=VkKeyboardColor.NEGATIVE,
                                     payload={"type": "show_snackbar",
                                              "text": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞"})

    if button_liked_list:
        keyboard.add_callback_button(label='üíõ–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫',
                                     color=VkKeyboardColor.POSITIVE,
                                     payload={"type": "show_snackbar",
                                              "text": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"})
    else:
        keyboard.add_callback_button(label='üíõ–£–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞',
                                     color=VkKeyboardColor.POSITIVE,
                                     payload={"type": "show_snackbar",
                                              "text": f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"})
    keyboard.add_line()
    keyboard.add_callback_button(label='–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å',
                                 color=VkKeyboardColor.SECONDARY,
                                 payload={"type": "open_link",
                                          'link': url_profile})
    return keyboard


def like_block_list(people: str) -> VkKeyboard:
    """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–∫–∞"""
    text = '—Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' if people == 'Like list' else '—á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫'
    keyboard = VkKeyboard(one_time=False, inline=True)
    keyboard.add_callback_button(label='–û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫',
                                 color=VkKeyboardColor.NEGATIVE,
                                 payload={"type": "show_snackbar",
                                          "text": text + ' –æ—á–∏—â–µ–Ω'})
    return keyboard
